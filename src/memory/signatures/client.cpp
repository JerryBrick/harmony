// SPDX-License-Identifier: GPL-3.0-only

#include <cstdint>
#include "../signature.hpp"
#include "client.hpp"

namespace Harmony {
    std::vector<Signature> find_client_signatures() {
        std::vector<Signature> signatures;

        #define FIND_SIGNATURE(name, offset, ...) { \
            const std::int16_t data[] = __VA_ARGS__; \
            signatures.emplace_back(name, data, sizeof(data) / sizeof(data[0]), offset); \
        }
        
        /** Events */
        FIND_SIGNATURE("on_tick", 0x0, {-1 /*0xE8*/, -1, -1, -1, -1, 0xA1, -1, -1, -1, -1, 0x8B, 0x50, 0x14, 0x8B, 0x48, 0x0C});
        FIND_SIGNATURE("on_multiplayer_sound", 0x0, {0xC6, 0x44, 0x24, 0x04, 0x00, 0x8A, 0x86});
        FIND_SIGNATURE("on_map_load", 0x0, {0xE8, -1, -1, -1, -1, 0xE8, -1, -1, -1, -1, 0xA1, -1, -1, -1, -1, 0x33, 0xD2, 0x8B, 0xC8, 0x89, 0x11});
        FIND_SIGNATURE("on_multiplayer_event", 0x2, {0x52, 0x50, 0xE8, -1, -1, -1, -1, 0x83, 0xC4, 0x10, 0x5F});

        /** Misc */
        FIND_SIGNATURE("window_handle", 0x2, {0x89, 0x35, -1, -1, -1, -1, 0xFF, 0x15, -1, -1, -1, -1, 0x3B, 0xC5});
        FIND_SIGNATURE("halo_path", 0x1, {0xBF, -1, -1, -1, -1, 0xF3, 0xAB, 0xAA, 0xE8});
        FIND_SIGNATURE("console_out", 0x0, { 0x83, 0xEC, 0x10, 0x57, 0x8B, 0xF8, 0xA0, -1, -1, -1, -1, 0x84, 0xC0, 0xC7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x80, 0x3F });
        FIND_SIGNATURE("resolution", 0x4, {0x75, 0x0A, 0x66, 0xA1, -1, -1, -1, -1, 0x66, 0x89, 0x42, 0x04, 0x83, 0xC4, 0x10, 0xC3});

        /** DirectX stuff */
        FIND_SIGNATURE("d3d9_call_end_scene", 0x0, {0xFF, 0x92, 0xA8, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x7C, 0x0C});
        FIND_SIGNATURE("d3d9_call_reset", 0x0, {0xFF, 0x52, 0x40, 0x85, 0xC0, 0x0F, 0x8C});

        return signatures;
    }
}